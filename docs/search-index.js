crystal_doc_search_index_callback({"repository_name":"github.com/elbywan/openapi-generator","body":"# openapi-generator\n\n[![Build Status](https://travis-ci.org/elbywan/openapi-generator.svg?branch=master)](https://travis-ci.org/elbywan/openapi-generator)\n\n#### Generate an [OpenAPI v3 compliant](https://swagger.io/specification/) yaml file declaratively from your web framework code.\n\nThen serve it from a [Swagger UI](https://swagger.io/tools/swagger-ui/) instance.\n\n## üíæ Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  openapi-generator:\n    github: elbywan/openapi-generator\n```\n\n2. Run `shards install`\n\n## üìö Full Documentation\n\n[**Please check this link for the full documentation.**](https://elbywan.github.io/openapi-generator/OpenAPI/Generator.html)\n\n## üî®Minimal Working Example\n\n```crystal\nrequire \"openapi-generator\"\n\n# The following example is using [Amber](https://amberframework.org/)\n# but this library is compatible with any web framework.\n\nrequire \"amber\"\nrequire \"openapi-generator/providers/amber\"\n\n# Optional: auto-serialize classes into openapi schema.\n# Benefit: a typed Model class can then be used as the source of truth.\nclass Coordinates\n  extend OpenAPI::Generator::Serializable\n\n  def initialize(@lat, @long); end\n\n  property lat  : Int32\n  property long : Int32\nend\n\n# Annotate the methods that will appear in the openapi file.\nclass Controller < Amber::Controller::Base\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      required: true\n      content:\n        #{Schema.ref Coordinates}\n    required: true\n    responses:\n      200:\n        description: OK\n      #{Schema.error 404}\n  YAML\n  )]\n  def method\n    # Some code‚Ä¶\n  end\nend\n\n# Add the routes.\nAmber::Server.configure do\n  routes :api do\n    post \"/method/:id\", Controller, :method\n  end\nend\n\n# Generate the openapi file.\n\nOpenAPI::Generator.generate(\n  provider: OpenAPI::Generator::RoutesProvider::Amber.new\n)\n```\n\nWill produce an `./openapi.yaml` file with the following contents:\n\n```yaml\n---\nopenapi: 3.0.1\ninfo:\n  title: Server\n  version: \"1\"\npaths:\n  /method/{id}:\n    post:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\n    options:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\ncomponents:\n  schemas:\n    Coordinates:\n      required:\n      - lat\n      - long\n      type: object\n      properties:\n        lat:\n          type: integer\n        long:\n          type: integer\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes: {}\n  links: {}\n  callbacks: {}\n```\n\n## ü§ù Contributing\n\n1. Fork it (<https://github.com/your-github-user/openapi-generator/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## üßë‚Äçü§ù‚Äçüßë Contributors\n\n- [elbywan](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"github.com/elbywan/openapi-generator/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/elbywan/openapi-generator","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI","path":"OpenAPI.html","kind":"module","full_name":"OpenAPI","name":"OpenAPI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":40,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr"},{"filename":"openapi-generator/extensions.cr","line_number":83,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/extensions.cr"},{"filename":"lib/open_api/src/open_api/object.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/object.cr"},{"filename":"lib/open_api/src/open_api/reference.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/reference.cr"},{"filename":"lib/open_api/src/open_api/schema.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/schema.cr"},{"filename":"lib/open_api/src/open_api/example.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/example.cr"},{"filename":"lib/open_api/src/open_api/header.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/header.cr"},{"filename":"lib/open_api/src/open_api/encoding.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/encoding.cr"},{"filename":"lib/open_api/src/open_api/media_type.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/media_type.cr"},{"filename":"lib/open_api/src/open_api/response.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/response.cr"},{"filename":"lib/open_api/src/open_api/parameter.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/parameter.cr"},{"filename":"lib/open_api/src/open_api/request_body.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/request_body.cr"},{"filename":"lib/open_api/src/open_api/server_variable.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/server_variable.cr"},{"filename":"lib/open_api/src/open_api/server.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/server.cr"},{"filename":"lib/open_api/src/open_api/link.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/link.cr"},{"filename":"lib/open_api/src/open_api/external_documentation.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/external_documentation.cr"},{"filename":"lib/open_api/src/open_api/operation.cr","line_number":10,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/operation.cr"},{"filename":"lib/open_api/src/open_api/path_item.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/path_item.cr"},{"filename":"lib/open_api/src/open_api/oauth_flow.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/oauth_flow.cr"},{"filename":"lib/open_api/src/open_api/oauth_flows.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/oauth_flows.cr"},{"filename":"lib/open_api/src/open_api/security_scheme.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/security_scheme.cr"},{"filename":"lib/open_api/src/open_api/components.cr","line_number":16,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/components.cr"},{"filename":"lib/open_api/src/open_api/contact.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/contact.cr"},{"filename":"lib/open_api/src/open_api/license.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/license.cr"},{"filename":"lib/open_api/src/open_api/info.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/info.cr"},{"filename":"lib/open_api/src/open_api/tag.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/tag.cr"},{"filename":"lib/open_api/src/open_api/document.cr","line_number":8,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/document.cr"},{"filename":"lib/open_api/src/open_api/mass_assignment.cr","line_number":1,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/mass_assignment.cr"},{"filename":"lib/open_api/src/open_api/schemas.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api/schemas.cr"},{"filename":"lib/open_api/src/open_api.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/open_api/src/open_api.cr"},{"filename":"openapi-generator/openapi.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/openapi.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Field","path":"OpenAPI/Field.html","kind":"annotation","full_name":"OpenAPI::Field","name":"Field","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/serializable.cr","line_number":65,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/serializable.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI","kind":"module","full_name":"OpenAPI","name":"OpenAPI"},"doc":"Mark a field with special properties during serialization.\n\n```\n@[OpenAPI::Field(ignore: true)] # Ignore the field\nproperty ignored_field\n\n@[OpenAPI::Field(type: String)] # Enforce a type\nproperty str_field : Int32\n```","summary":"<p>Mark a field with special properties during serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","path":"OpenAPI/Generator.html","kind":"module","full_name":"OpenAPI::Generator","name":"Generator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":40,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr"},{"filename":"openapi-generator/generator.cr","line_number":145,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/generator.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_OPTIONS","name":"DEFAULT_OPTIONS","value":"{output: Path[Dir.current] / \"openapi.yaml\"}","doc":null,"summary":null},{"id":"Log","name":"Log","value":"::Log.for(self)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI","kind":"module","full_name":"OpenAPI","name":"OpenAPI"},"doc":"An OpenAPI yaml specifications file generator.\n\n### Complete example\n\n```\nrequire \"openapi-generator\"\n\n# The following example is using [Amber](https://amberframework.org/)\n# but this library is compatible with any web framework.\n\nrequire \"amber\"\nrequire \"openapi-generator/providers/amber\"\n\n# Optional: auto-serialize classes into openapi schema.\n# A typed Model class can be used as the source of truth.\nclass Coordinates\n  extend OpenAPI::Generator::Serializable\n\n  def initialize(@lat, @long); end\n\n  property lat : Int32\n  property long : Int32\nend\n\n# Annotate the methods that will appear in the openapi file.\nclass Controller < Amber::Controller::Base\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      required: true\n      content:\n        #{Schema.ref Coordinates}\n    required: true\n    responses:\n      200:\n        description: OK\n      #{Schema.error 404}\n  YAML\n  )]\n  def method\n    # Some code‚Ä¶\n  end\nend\n\n# Add the routes.\nAmber::Server.configure do\n  routes :api do\n    post \"/method/:id\", Controller, :method\n  end\nend\n\n# Generate the openapi file.\n\nOpenAPI::Generator.generate(\n  provider: OpenAPI::Generator::RoutesProvider::Amber.new\n)\n```\n\nWill produce an `./openapi.yaml` file with the following contents:\n\n```yaml\n---\nopenapi: 3.0.1\ninfo:\n  title: Server\n  version: \"1\"\npaths:\n  /method/{id}:\n    post:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\n    options:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\ncomponents:\n  schemas:\n    Coordinates:\n      required:\n      - lat\n      - long\n      type: object\n      properties:\n        lat:\n          type: integer\n        long:\n          type: integer\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes: {}\n  links: {}\n  callbacks: {}\n```\n\n### Usage\n\n","summary":"<p>An OpenAPI yaml specifications file generator.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"generate(provider:OpenAPI::Generator::RoutesProvider::Base,*,options=NamedTuple.new,base_doc={info:{title:&quot;Server&quot;,version:&quot;1&quot;},components:NamedTuple.new})-instance-method","html_id":"generate(provider:OpenAPI::Generator::RoutesProvider::Base,*,options=NamedTuple.new,base_doc={info:{title:&amp;quot;Server&amp;quot;,version:&amp;quot;1&amp;quot;},components:NamedTuple.new})-instance-method","name":"generate","doc":"Generate an OpenAPI yaml file.\n\nAn `OpenAPI::Generator::RoutesProvider::Base` implementation must be provided.\n\nCurrently, only the [Amber](https://amberframework.org/) provider is included out of the box\nbut writing a custom provider should be easy.\n\n### Example\n\n```\nclass MockProvider < OpenAPI::Generator::RoutesProvider::Base\n  def route_mappings : Array(OpenAPI::Generator::RouteMapping)\n    [\n      {\"get\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n      {\"head\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n      {\"options\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n    ]\n  end\nend\n\noptions = {\n  output: Path[Dir.current] / \"public\" / \"openapi.yaml\",\n}\nbase_doc = {\n  info: {\n    title:   \"Test\",\n    version: \"0.0.1\",\n  },\n  components: NamedTuple.new,\n}\nOpenAPI::Generator.generate(\n  MockProvider.new,\n  options: options,\n  base_doc: base_doc\n)\n```","summary":"<p>Generate an OpenAPI yaml file.</p>","abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"OpenAPI::Generator::RoutesProvider::Base"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"options","doc":null,"default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"base_doc","doc":null,"default_value":"{info: {title: \"Server\", version: \"1\"}, components: NamedTuple.new}","external_name":"base_doc","restriction":""}],"args_string":"(provider : OpenAPI::Generator::RoutesProvider::Base, *, options = <span class=\"t\">NamedTuple</span>.<span class=\"k\">new</span>, base_doc = {info: {title: <span class=\"s\">&quot;Server&quot;</span>, version: <span class=\"s\">&quot;1&quot;</span>}, components: <span class=\"t\">NamedTuple</span>.<span class=\"k\">new</span>})","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/generator.cr#L197","def":{"name":"generate","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"OpenAPI::Generator::RoutesProvider::Base"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"options","doc":null,"default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"base_doc","doc":null,"default_value":"{info: {title: \"Server\", version: \"1\"}, components: NamedTuple.new}","external_name":"base_doc","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes = provider.route_mappings\npath_items = {} of String => OpenAPI::PathItem\noptions = DEFAULT_OPTIONS.merge(options)\nroutes = routes.sort do |a, b|\n  a[1] <=> b[1]\nend\nroutes.each do |route|\n  method, full_path, key, path_params = route\n  if yaml_op = Controller::CONTROLLER_OPS[key]?\n    begin\n      yaml_op_any = yaml_op\n      __temp_49 = full_path\n      path_items[__temp_49]? || (path_items[__temp_49] = OpenAPI::PathItem.new)\n      op = OpenAPI::Operation.from_json(yaml_op_any.to_json)\n      if path_params.size > 0\n        op.parameters || (op.parameters = [] of OpenAPI::Parameter | OpenAPI::Reference)\n      end\n      path_params.each do |param|\n        op.parameters.not_nil!.unshift(OpenAPI::Parameter.new(in: \"path\", name: param, required: true, example: param, schema: OpenAPI::Schema.new(type: \"string\")))\n      end\n      {% if true %}\n          {% methods = [\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"] of ::String %}\n\n          case method\n          {% for method in methods %}\n          when \"{{ method.id }}\"\n            path_items[full_path].{{ method.id }} = op\n          {% end %}\n          else\n            raise \"Unsupported method: #{method}.\"\n          end\n\n          {% end %}\n    rescue err\n      Log.error do\n        \"Error while generating bindings for path [#{full_path}].\\n\\n#{err}\\n\\n#{yaml_op}\"\n      end\n    end\n  else\n    Log.warn do\n      \"#{full_path} (#{method.upcase}) : Route is undocumented.\"\n    end\n  end\nend\nbase_doc = base_doc.merge({openapi: \"3.0.1\", info: base_doc[\"info\"], paths: path_items, components: base_doc[\"components\"].merge({schemas: Serializable.schemas})})\ndoc = OpenAPI.build do |api|\n  api.document(**base_doc)\nend\nFile.write(options[\"output\"].to_s, doc.to_yaml)\n"}}],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","path":"OpenAPI/Generator/Controller.html","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":40,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONTROLLER_OPS","name":"CONTROLLER_OPS","value":"{} of String => YAML::Any","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"This module, when included, will register every instance methods annotated with the `OpenAPI` annotation.\n\n### Example\n\n```\nclass Controller\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      content:\n        #{Schema.ref SerializableClass}\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/SerializableClass'\n      required: true\n    responses:\n      \"303\":\n        description: Operation completed successfully, and redirects to /.\n      \"404\":\n        description: Data not found.\n      #{Schema.error 400}\n  YAML\n  )]\n  def method; end\nend\n```\n\n### Usage\n\nIncluding this module will register and mark every instance method annotated with a valid `@[OpenAPI]` annotation during the compilation phase.\nThese methods will then be taken into account when calling the `Generator` as long as the method can be mapped to a route.\n\nThe `Schema` module contains various helpers to generate YAML parts.","summary":"<p>This module, when included, will register every instance methods annotated with the <code><a href=\"../../OpenAPI/Generator/Controller/OpenAPI.html\">OpenAPI</a></code> annotation.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/OpenAPI","path":"OpenAPI/Generator/Controller/OpenAPI.html","kind":"annotation","full_name":"OpenAPI::Generator::Controller::OpenAPI","name":"OpenAPI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":60,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller"},"doc":"This annotation is used to register a controller method as an OpenAPI [Operation Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#operationObject).\n\nThe argument must be a valid YAML representation of an OpenAPI operation object.\n\n```\n@[OpenAPI(<<-YAML\n  tags:\n  - tag\n  summary: A brief summary of the method.\n  responses:\n    200:\n      description: Ok.\nYAML\n)]\ndef method\nend\n```","summary":"<p>This annotation is used to register a controller method as an OpenAPI <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#operationObject\" target=\"_blank\">Operation Object</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/Schema","path":"OpenAPI/Generator/Controller/Schema.html","kind":"module","full_name":"OpenAPI::Generator::Controller::Schema","name":"Schema","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":80,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/Schema","kind":"module","full_name":"OpenAPI::Generator::Controller::Schema","name":"Schema"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller"},"doc":"This module contains various OpenAPI yaml syntax shortcuts.","summary":"<p>This module contains various OpenAPI yaml syntax shortcuts.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error(code,message=nil)-instance-method","html_id":"error(code,message=nil)-instance-method","name":"error","doc":"Generate an error response as a [response object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#responses-object-example).\n\n```\n# message is optional and defaults to a [standard error description](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) based on the code.\nSchema.error 400, message: \"Bad Request\"\n\n# Produces:\n\n<<-YAML\n400:\n  description: Bad Request\nYAML\n```","summary":"<p>Generate an error response as a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#responses-object-example\" target=\"_blank\">response object</a>.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"args_string":"(code, message = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L179","def":{"name":"error","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{code}: {\\ndescription: #{message || (HTTP::Status.new(code)).description}.\\n}\""}},{"id":"header(name,description,type=&quot;string&quot;)-instance-method","html_id":"header(name,description,type=&amp;quot;string&amp;quot;)-instance-method","name":"header","doc":"Generate a [header object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#header-object).\n\n```\nSchema.header \"X-Header\", \"A custom header\", type: \"string\"\n\n# Produces:\n\n<<-YAML\n\"X-Header\":\n  schema:\n    type: string\n  description: A custom header\nYAML\n```","summary":"<p>Generate a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#header-object\" target=\"_blank\">header object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(name, description, type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L261","def":{"name":"header","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{name}: {\\n  schema: {\\n    type: #{type}\\n  },\\n  description: #{description}\\n}\""}},{"id":"header_param(name,description,*,required=false,type=&quot;string&quot;)-instance-method","html_id":"header_param(name,description,*,required=false,type=&amp;quot;string&amp;quot;)-instance-method","name":"header_param","doc":"Generate a header [parameter object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject).\n\n```\nSchema.header_param \"X-Header\", \"A custom header\", required: true, type: \"integer\"\n\n# Produces\n\n<<-YAML\n- in: header\n  name: \"X-Header\"\n  description: A custom header\n  required: true\n  schema:\n    type: integer\nYAML\n```","summary":"<p>Generate a header <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject\" target=\"_blank\">parameter object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(name, description, *, required = <span class=\"n\">false</span>, type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L233","def":{"name":"header_param","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"- {\\n  in: header,\\n  name: #{name},\\n  description: #{description},\\n  required: #{required},\\n  schema: {\\n    type: #{type}\\n  }\\n}\""}},{"id":"qp(name,description,*,required=false,type=&quot;string&quot;)-instance-method","html_id":"qp(name,description,*,required=false,type=&amp;quot;string&amp;quot;)-instance-method","name":"qp","doc":"Generate a query parameter as a [parameter object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject).\n\n```\nSchema.qp \"id\", \"Filter by id\", required: true, type: \"integer\"\n\n# Produces:\n\n<<-YAML\n- in: query\n  name: id\n  description: Filter by id\n  required: true\n  schema:\n    type: integer\nYAML\n```","summary":"<p>Generate a query parameter as a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject\" target=\"_blank\">parameter object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(name, description, *, required = <span class=\"n\">false</span>, type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L203","def":{"name":"qp","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"- {\\n  in: query,\\n  name: \\\"#{name}\\\",\\n  description: \\\"#{description}\\\",\\n  required: #{required},\\n  schema: {\\n    type: #{type}\\n  }\\n}\""}},{"id":"ref(schema,*,content_type=&quot;application/json&quot;)-instance-method","html_id":"ref(schema,*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"ref","doc":"Generates a schema reference as a [media type object](https://swagger.io/docs/specification/media-types/).\n\nUseful when dealing with objects including the `Serializable` module.\n\n```\nSchema.ref SerializableClass, content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    $ref: '#/components/schemas/SerializableClass'\nYAML\n```","summary":"<p>Generates a schema reference as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(schema, *, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L98","def":{"name":"ref","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\nschema: {\\n    $ref: '#/components/schemas/#{schema.name}'\\n  }\\n}\""}},{"id":"ref_array(schema,*,content_type=&quot;application/json&quot;)-instance-method","html_id":"ref_array(schema,*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"ref_array","doc":"Generates an array of schema references as a [media type object](https://swagger.io/docs/specification/media-types/).\n\nUseful when dealing with objects including the `Serializable` module.\n\n```\nSchema.ref_array SerializableClass, content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    type: array,\n    items:\n      $ref: '#/components/schemas/SerializableClass'\nYAML\n```","summary":"<p>Generates an array of schema references as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(schema, *, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L125","def":{"name":"ref_array","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\n  schema: {\\n      type: array,\\n      items: {\\n        $ref: '#/components/schemas/#{schema.name}'\\n      }\\n  }\\n}\""}},{"id":"string_array(*,content_type=&quot;application/json&quot;)-instance-method","html_id":"string_array(*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"string_array","doc":"Generates an array of string as a [media type object](https://swagger.io/docs/specification/media-types/).\n\n```\nSchema.string_array content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    type: array,\n    items:\n      type: string\nYAML\n```","summary":"<p>Generates an array of string as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(*, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/controller.cr#L153","def":{"name":"string_array","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\n  schema: {\\n      type: array,\\n      items: {\\n        type: string\\n      }\\n  }\\n}\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Helpers","path":"OpenAPI/Generator/Helpers.html","kind":"module","full_name":"OpenAPI::Generator::Helpers","name":"Helpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/helpers/amber.cr","line_number":143,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Helpers/Amber","path":"OpenAPI/Generator/Helpers/Amber.html","kind":"module","full_name":"OpenAPI::Generator::Helpers::Amber","name":"Amber","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/helpers/amber.cr","line_number":143,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Helpers","kind":"module","full_name":"OpenAPI::Generator::Helpers","name":"Helpers"},"doc":"Helpers that can be used inside an [Amber](https://amberframework.org/) Controller to enable inference\nand ensure that the code matches the contract defined in the generated OpenAPI document.\n\nInclude this module inside a Controller class to add various macros that you can use to make the generator\ninfer some properties of the OpenAPI declaration.\n\n- `body_as` can infer request body types and schemas.\n- `respond_with` can infer responses types and schemas.\n- `query_params` can infer query parameters.\n\nNOTE: Do not forget to call `bootstrap` once before calling `OpenAPI::Generator.generate`.\n\n```\nrequire \"json\"\nrequire \"openapi-generator/helpers/amber\"\n\nclass HelloPayloadController < Amber::Controller::Base\n  include ::OpenAPI::Generator::Controller\n  include ::OpenAPI::Generator::Helpers::Amber\n\n  @[OpenAPI(\n    <<-YAML\n      summary: Sends a hello payload\n    YAML\n  )]\n  def index\n    # Infers query parameters.\n    query_params \"mandatory\", description: \"A mandatory query parameter\"\n    query_params? \"optional\", description: \"An optional query parameter\"\n\n    # Infers request body.\n    body_as Payload?, description: \"The request payload.\"\n\n    # Infers responses.\n    respond_with 200, description: \"A hello payload.\" do\n      json Payload.new, type: Payload\n      xml \"<hello></hello>\", type: String\n    end\n    respond_with 201, description: \"A good morning message.\" do\n      text \"Good morning.\", type: String\n    end\n    respond_with 400 do\n      text \"Ouch.\", type: String\n    end\n  end\nend\n\nclass Payload\n  include JSON::Serializable\n  extend OpenAPI::Generator::Serializable\n\n  def initialize(@hello : String = \"world\")\n  end\nend\n\nAmber::Server.configure do\n  routes :api do\n    route \"get\", \"/hello\", HelloPayloadController, :index\n  end\nend\n\nOpenAPI::Generator::Helpers::Amber.bootstrap\nOpenAPI::Generator.generate(OpenAPI::Generator::RoutesProvider::Amber.new)\n```\n\nWill produce:\n\n```yaml\n---\nopenapi: 3.0.1\ninfo:\n  title: Test\n  version: 0.0.1\npaths:\n  /hello:\n    get:\n      summary: Sends a hello payload\n      parameters:\n      - name: mandatory\n        in: query\n        description: A mandatory query parameter\n        required: true\n        schema:\n          type: string\n      - name: optional\n        in: query\n        description: An optional query parameter\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: The request payload.\n        content:\n          application_json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/Payload'\n        required: false\n      responses:\n        \"200\":\n          description: A hello payload?\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/Payload'\n            application/xml:\n              schema:\n                type: string\n        \"201\":\n          description: A good morning message.\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          description: Bad Request\n          content:\n            text/plain:\n              schema:\n                type: string\ncomponents:\n  schemas:\n    Payload:\n      required:\n      - hello\n      type: object\n      properties:\n        hello:\n          type: string\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes: {}\n  links: {}\n  callbacks: {}\n```","summary":"<p>Helpers that can be used inside an <a href=\"https://amberframework.org/\" target=\"_blank\">Amber</a> Controller to enable inference and ensure that the code matches the contract defined in the generated OpenAPI document.</p>","class_methods":[{"id":"bootstrap-class-method","html_id":"bootstrap-class-method","name":"bootstrap","doc":"Run this method exactly once before generating the schema to register all the inferred properties.","summary":"<p>Run this method exactly once before generating the schema to register all the inferred properties.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L371","def":{"name":"bootstrap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::OpenAPI::Generator::Helpers::Amber::QP_LIST.each do |method, params|\n  openapi_op = ::OpenAPI::Generator::Controller::CONTROLLER_OPS[method]?\n  if openapi_op\n  else\n    next\n  end\n  if openapi_op[\"parameters\"]?\n  else\n    openapi_op.as_h[YAML::Any.new(\"parameters\")] = YAML::Any.new([] of YAML::Any)\n  end\n  params.each do |param|\n    openapi_op[\"parameters\"].as_a << (YAML.parse(param.to_yaml))\n  end\nend\n::OpenAPI::Generator::Helpers::Amber::CONTROLLER_RESPONSES.each do |method, responses|\n  op = ::OpenAPI::Generator::Controller::CONTROLLER_OPS[method]?\n  if op\n  else\n    next\n  end\n  responses.each do |__arg0|\n    code = __arg0[0]\n    values = __arg0[1]\n    response, schemas = values\n    schemas.try(&.each do |content_type, schema|\n      if response.content\n      else\n        response.content = {} of String => OpenAPI::MediaType\n      end\n      response.content.try(&.[]=(content_type, ::OpenAPI::MediaType.new(schema: schema)))\n    end)\n    if op[\"responses\"]?\n    else\n      op.as_h[YAML::Any.new(\"responses\")] = YAML::Any.new(Hash(YAML::Any, YAML::Any).new)\n    end\n    original_yaml_response = op[\"responses\"].as_h.find do |__arg3|\n      key = __arg3[0]\n      value = __arg3[1]\n      key.raw.to_s == code.to_s\n    end\n    if !original_yaml_response\n      op[\"responses\"].as_h[YAML::Any.new(code.to_s)] = YAML.parse(response.to_yaml)\n    else\n      if original_yaml_response[1][\"description\"]?\n      else\n        original_yaml_response[1].as_h[YAML::Any.new(\"description\")] = YAML::Any.new(\"\")\n      end\n      original_response = ::OpenAPI::Response.from_json(original_yaml_response[1].to_json)\n      op[\"responses\"].as_h[YAML::Any.new(code.to_s)] = YAML.parse(::OpenAPI::Response.new(description: response.description || original_response.description, headers: original_response.headers || response.headers, links: original_response.links || response.links, content: original_response.content || response.content).to_yaml)\n    end\n  end\nend\n::OpenAPI::Generator::Helpers::Amber::BODY_LIST.each do |method, value|\n  op = ::OpenAPI::Generator::Controller::CONTROLLER_OPS[method]?\n  if op\n  else\n    next\n  end\n  request_body, schemas = value\n  schemas.each do |content_type, schema|\n    request_body.content.try(&.[]=(content_type, ::OpenAPI::MediaType.new(schema: schema)))\n  end\n  if op[\"requestBody\"]?\n  else\n    op.as_h[YAML::Any.new(\"requestBody\")] = YAML.parse(request_body.to_yaml)\n  end\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"body_as(type,description=nil,content_type=&quot;application_json&quot;,constructor=from_json)-macro","html_id":"body_as(type,description=nil,content_type=&amp;quot;application_json&amp;quot;,constructor=from_json)-macro","name":"body_as","doc":"Extracts and serialize the body from the request and registers it in the OpenAPI operation.\n\n```\n# This will try to case the body as a SomeClass using the SomeClass.new method and assuming that the payload is a json.\nbody_as SomeClass, description: \"Some payload.\", content_type: \"application_json\", constructor: new\n# The content_type, constructor and description can be omitted.\nbody_as SomeClass\n```","summary":"<p>Extracts and serialize the body from the request and registers it in the OpenAPI operation.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application_json\"","external_name":"content_type","restriction":""},{"name":"constructor","doc":null,"default_value":"from_json","external_name":"constructor","restriction":""}],"args_string":"(type, description = <span class=\"n\">nil</span>, content_type = <span class=\"s\">&quot;application_json&quot;</span>, constructor = from_json)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L243","def":{"name":"body_as","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application_json\"","external_name":"content_type","restriction":""},{"name":"constructor","doc":null,"default_value":"from_json","external_name":"constructor","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% non_nil_type = type.resolve.union_types.reject do |t|\n  t == Nil\nend[0] %}\n\n    body_as(\n      request_body: ::OpenAPI::Generator::Helpers::Amber.init_openapi_request_body(\n        description: \n{{ description }}\n,\n        required: \n{{ !type.resolve.nilable? }}\n\n      ),\n      schema: \n{{ non_nil_type }}\n.to_openapi_schema,\n      content_type: \n{{ content_type }}\n\n    )\n    \n%content\n = request.body.try &.gets_to_end\n    if \n%content\n\n      \n{{ non_nil_type }}\n.\n{{ constructor }}\n(\n%content\n)\n    \nend\n  \n"}},{"id":"query_params(name,description,multiple=false,schema=nil,**args)-macro","html_id":"query_params(name,description,multiple=false,schema=nil,**args)-macro","name":"query_params","doc":"Fetch a query parameter and register it in the OpenAPI operation related to the controller method.\n\n```\nquery_params \"name\", \"A user name.\"\n```","summary":"<p>Fetch a query parameter and register it in the OpenAPI operation related to the controller method.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"schema","doc":null,"default_value":"nil","external_name":"schema","restriction":""}],"args_string":"(name, description, multiple = <span class=\"n\">false</span>, schema = <span class=\"n\">nil</span>, **args)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L163","def":{"name":"query_params","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"schema","doc":null,"default_value":"nil","external_name":"schema","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    _query_params(\n      name: \n{{ name }}\n,\n      param: ::OpenAPI::Generator::Helpers::Amber.init_openapi_parameter(\n        name: \n{{ name }}\n,\n        \"in\": \"query\",\n        required: true,\n        schema: \n{% if schema %}{{ schema }}{% else %}{% if multiple %}::OpenAPI::Schema.new(\n          type: \"array\",\n          items: ::OpenAPI::Schema.new(\n            type: \"string\"\n          )\n        ){% else %}::OpenAPI::Schema.new(\n          type: \"string\",\n        ){% end %}{% end %}\n,\n        description: \n{{ description }}\n,\n        \n{{ **args }}\n\n      ),\n      required: true,\n      multiple: \n{{ multiple }}\n\n    )\n  \n"}},{"id":"query_params?(name,description,multiple=false,schema=nil,**args)-macro","html_id":"query_params?(name,description,multiple=false,schema=nil,**args)-macro","name":"query_params?","doc":"Fetch an optional query parameter and register it in the OpenAPI operation related to the controller method.\n\n```\nquery_params? \"name[]\", \"One or multiple user names. (optional)\", multiple = true\n```","summary":"<p>Fetch an optional query parameter and register it in the OpenAPI operation related to the controller method.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"schema","doc":null,"default_value":"nil","external_name":"schema","restriction":""}],"args_string":"(name, description, multiple = <span class=\"n\">false</span>, schema = <span class=\"n\">nil</span>, **args)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L191","def":{"name":"query_params?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"schema","doc":null,"default_value":"nil","external_name":"schema","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    _query_params(\n      name: \n{{ name }}\n,\n      param: ::OpenAPI::Generator::Helpers::Amber.init_openapi_parameter(\n        name: \n{{ name }}\n,\n        \"in\": \"query\",\n        required: false,\n        schema: \n{% if schema %}{{ schema }}{% else %}{% if multiple %}::OpenAPI::Schema.new(\n          type: \"array\",\n          items: ::OpenAPI::Schema.new(\n            type: \"string\"\n          )\n        ){% else %}::OpenAPI::Schema.new(\n          type: \"string\",\n        ){% end %}{% end %}\n,\n        description: \n{{ description }}\n,\n        \n{{ **args }}\n\n      ),\n      required: false,\n      multiple: \n{{ multiple }}\n\n    )\n  \n"}},{"id":"respond_with(code=200,description=nil,headers=nil,links=nil,&)-macro","html_id":"respond_with(code=200,description=nil,headers=nil,links=nil,&amp;)-macro","name":"respond_with","doc":"Same as the [Amber method](https://docs.amberframework.org/amber/guides/controllers/respond-with) with automatic response inference.","summary":"<p>Same as the <a href=\"https://docs.amberframework.org/amber/guides/controllers/respond-with\" target=\"_blank\">Amber method</a> with automatic response inference.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"200","external_name":"code","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"links","doc":null,"default_value":"nil","external_name":"links","restriction":""}],"args_string":"(code = <span class=\"n\">200</span>, description = <span class=\"n\">nil</span>, headers = <span class=\"n\">nil</span>, links = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L323","def":{"name":"respond_with","args":[{"name":"code","doc":null,"default_value":"200","external_name":"code","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"links","doc":null,"default_value":"nil","external_name":"links","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"    respond_with(code: \n{{ code }}\n, response: ::OpenAPI::Generator::Helpers::Amber.init_openapi_response(\n      description: \n{{ description }}\n,\n      code: \n{{ code }}\n,\n      headers: \n{{ headers }}\n,\n      links: \n{{ links }}\n\n    )) do\n      \n{{ yield }}\n\n    \nend\n  \n"}},{"id":"respond_without_body(code=200,description=nil,headers=nil,links=nil)-macro","html_id":"respond_without_body(code=200,description=nil,headers=nil,links=nil)-macro","name":"respond_without_body","doc":"Same as the [Amber method](https://docs.amberframework.org/amber/guides/controllers/respond-with) but without specifying any content and with automatic response inference.","summary":"<p>Same as the <a href=\"https://docs.amberframework.org/amber/guides/controllers/respond-with\" target=\"_blank\">Amber method</a> but without specifying any content and with automatic response inference.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"200","external_name":"code","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"links","doc":null,"default_value":"nil","external_name":"links","restriction":""}],"args_string":"(code = <span class=\"n\">200</span>, description = <span class=\"n\">nil</span>, headers = <span class=\"n\">nil</span>, links = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/helpers/amber.cr#L346","def":{"name":"respond_without_body","args":[{"name":"code","doc":null,"default_value":"200","external_name":"code","restriction":""},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"links","doc":null,"default_value":"nil","external_name":"links","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    respond_without_body(code: \n{{ code }}\n, response: ::OpenAPI::Generator::Helpers::Amber.init_openapi_response(\n      description: \n{{ description }}\n,\n      code: \n{{ code }}\n,\n      headers: \n{{ headers }}\n,\n      links: \n{{ links }}\n\n    ))\n  \n"}}],"types":[]}]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RouteMapping","path":"OpenAPI/Generator/RouteMapping.html","kind":"alias","full_name":"OpenAPI::Generator::RouteMapping","name":"RouteMapping","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/generator.cr","line_number":155,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/generator.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":true,"aliased":"Tuple(String, String, String, Array(String))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"A RouteMapping type is a tuple with the following shape: `{method, full_path, key, path_params}`\n- method: The HTTP Verb of the route. (ex: `\"get\"`)\n- full_path: The full path representation of the route with path parameters between curly braces. (ex: `\"/name/{id}\"`)\n- key: The fully qualified name of the method mapped to the route. (ex: `\"Controller::show\"`)\n- path_params: A list of path parameter names. (ex: `[\"id\", \"name\"]`)","summary":"<p>A RouteMapping type is a tuple with the following shape: <code>{method, full_path, key, path_params}</code> - method: The HTTP Verb of the route.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","path":"OpenAPI/Generator/RoutesProvider.html","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/providers/base.cr","line_number":2,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/base.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"Framework dependent implementations that should provide a list of routes mapped to a method that get executed on match.","summary":"<p>Framework dependent implementations that should provide a list of routes mapped to a method that get executed on match.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Amber","path":"OpenAPI/Generator/RoutesProvider/Amber.html","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Amber","name":"Amber","abstract":false,"superclass":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base"},{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/providers/amber.cr","line_number":20,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/amber.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider"},"doc":"Provides the list of routes declared in an Amber Framework instance.","summary":"<p>Provides the list of routes declared in an Amber Framework instance.</p>","class_methods":[],"constructors":[{"id":"new(included_methods:Array(String)?=nil,included_paths:Array(String)?=nil)-class-method","html_id":"new(included_methods:Array(String)?=nil,included_paths:Array(String)?=nil)-class-method","name":"new","doc":"Initialize the provider with a list of allowed HTTP verbs and path prefixes to filter the routes.","summary":"<p>Initialize the provider with a list of allowed HTTP verbs and path prefixes to filter the routes.</p>","abstract":false,"args":[{"name":"included_methods","doc":null,"default_value":"nil","external_name":"included_methods","restriction":"Array(String) | ::Nil"},{"name":"included_paths","doc":null,"default_value":"nil","external_name":"included_paths","restriction":"Array(String) | ::Nil"}],"args_string":"(included_methods : Array(String)? = <span class=\"n\">nil</span>, included_paths : Array(String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/amber.cr#L22","def":{"name":"new","args":[{"name":"included_methods","doc":null,"default_value":"nil","external_name":"included_methods","restriction":"Array(String) | ::Nil"},{"name":"included_paths","doc":null,"default_value":"nil","external_name":"included_paths","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(included_methods, included_paths)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"route_mappings:Array(RouteMapping)-instance-method","html_id":"route_mappings:Array(RouteMapping)-instance-method","name":"route_mappings","doc":"Return a list of routes mapped with the controllers and methods.","summary":"<p>Return a list of routes mapped with the controllers and methods.</p>","abstract":false,"args":[],"args_string":" : Array(RouteMapping)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/amber.cr#L26","def":{"name":"route_mappings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(RouteMapping)","visibility":"Public","body":"routes = [] of RouteMapping\n::Amber::Server.router.routes.each_route(->(full_path : String, route : ::Amber::Route) do\n  method, paths, path_params = ((full_path.gsub(\"//\", \"/\")).split(\"/\")).reduce({\"\", [] of String, [] of String}) do |acc, segment|\n    method, path_array, params = acc\n    if method.empty?\n      {segment, path_array, params}\n    else\n      if segment.starts_with?(':')\n        param = segment[1..]\n        path_array << \"{#{param}}\"\n        params << param\n        acc\n      else\n        path_array << \"#{segment}\"\n        acc\n      end\n    end\n  end\n  string_path = \"/#{paths.join(\"/\")}\"\n  key = \"#{route.controller}::#{route.action}\"\n  if (  (@included_methods.nil? || @included_methods.try(&.includes?(method))) && (@included_paths.nil? || @included_paths.try(&.any? do |p|\n    string_path.starts_with?(p)\n  end)))\n    routes << {method, string_path, key, path_params}\n  end\nend)\nroutes\n"}}],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","path":"OpenAPI/Generator/RoutesProvider/Base.html","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/providers/base.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/base.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Amber","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Amber","name":"Amber"}],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider"},"doc":"Base class for route providers.","summary":"<p>Base class for route providers.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"route_mappings:Array(RouteMapping)-instance-method","html_id":"route_mappings:Array(RouteMapping)-instance-method","name":"route_mappings","doc":"Returns a list of `OpenAPI::Generator::RouteMapping`","summary":"<p>Returns a list of <code><a href=\"../../../OpenAPI/Generator/RouteMapping.html\">OpenAPI::Generator::RouteMapping</a></code></p>","abstract":true,"args":[],"args_string":" : Array(RouteMapping)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/providers/base.cr#L8","def":{"name":"route_mappings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(RouteMapping)","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Serializable","path":"OpenAPI/Generator/Serializable.html","kind":"module","full_name":"OpenAPI::Generator::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/serializable.cr","line_number":55,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/serializable.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SERIALIZABLE_CLASSES","name":"SERIALIZABLE_CLASSES","value":"[] of Class","doc":"A list of all serializable subclasses.","summary":"<p>A list of all serializable subclasses.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"The `Serializable` module automatically generates an OpenAPI Operations representation of the class or struct when extended.\n\n### Example\n\n```\nstruct Model\n  extend OpenAPI::Generator::Serializable\n  include JSON::Serializable\n\n  property string : String\n  property opt_string : String?\n  @[OpenAPI::Field(ignore: true)]\n  property ignored : Nil\n  @[OpenAPI::Field(type: String)]\n  @cast : Int32\n\n  def cast\n    @cast.to_s\n  end\nend\n\nputs Model.to_openapi_schema.to_pretty_json\n# => {\n#   \"required\": [\n#     \"string\",\n#     \"cast\"\n#   ],\n#   \"type\": \"object\",\n#   \"properties\": {\n#     \"string\": {\n#       \"type\": \"string\"\n#     },\n#     \"opt_string\": {\n#       \"type\": \"string\"\n#     },\n#     \"cast\": {\n#       \"type\": \"string\"\n#     }\n#   }\n# }\n```\n\n### Usage\n\nExtending this module adds a `self.to_openapi_schema` that returns an OpenAPI representation\ninferred from the shape of the class or struct.\n\nThe class name is also registered as a global [component schema](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#components-object)\nand will be available for referencing from any `Controller` annotation from a [reference object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#referenceObject).\n\n**See:** `OpenAPI::Generator::Controller::Schema.ref`\n\nNOTE: **Calling `to_openapi_schema` programatically is unnecessary.\nThe `Generator` will take care of serialization while producing the openapi yaml file.**","summary":"<p>The <code><a href=\"../../OpenAPI/Generator/Serializable.html\">Serializable</a></code> module automatically generates an OpenAPI Operations representation of the class or struct when extended.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"generate_schema-instance-method","html_id":"generate_schema-instance-method","name":"generate_schema","doc":"Serialize the class into an `OpenAPI::Schema` representation.\n\nCheck the [swagger documentation](https://swagger.io/docs/specification/data-models/) for more details","summary":"<p>Serialize the class into an <code>OpenAPI::Schema</code> representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/serializable.cr#L231","def":{"name":"generate_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"schema = OpenAPI::Schema.new(type: \"object\", properties: Hash(String, OpenAPI::Schema | OpenAPI::Reference).new, required: [] of String)\n{% for ivar in @type.instance_vars %}\n\n      {% json_ann = ivar.annotation(JSON::Field) %}\n      {% openapi_ann = ivar.annotation(OpenAPI::Field) %}\n      {% types = ivar.type.union_types %}\n      {% schema_key = (json_ann && json_ann[:key]) || ivar.id %}\n      {% as_type = (openapi_ann && openapi_ann[:type]) && openapi_ann[:type].types.map(&.resolve) %}\n      {% read_only = openapi_ann && openapi_ann[:read_only] %}\n      {% write_only = openapi_ann && openapi_ann[:write_only] %}\n\n      {% if json_ann && json_ann[:ignore] %}{% else %}\n        ::OpenAPI::Generator::Serializable.generate_schema(\n          schema,\n          types: {{ types }},\n          schema_key: {{ schema_key }},\n          as_type: {{ as_type }},\n          read_only: {{ read_only }},\n          write_only: {{ write_only }}\n        )\n      {% end %}\n\n    {% end %}\nschema\n"}},{"id":"to_openapi_schema-instance-method","html_id":"to_openapi_schema-instance-method","name":"to_openapi_schema","doc":"Serialize the class into an `OpenAPI::Reference` representation.\n\nCheck the [swagger documentation](https://swagger.io/docs/specification/data-models/) for more details","summary":"<p>Serialize the class into an <code>OpenAPI::Reference</code> representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/serializable.cr#L268","def":{"name":"to_openapi_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"OpenAPI::Schema.new(all_of: [OpenAPI::Reference.new(ref: \"#/components/schemas/#{URI.encode_www_form({{ @type.stringify }})}\")])"}}],"macros":[{"id":"generate_schema(schema,types,as_type=nil,read_only=false,write_only=false,schema_key=nil)-macro","html_id":"generate_schema(schema,types,as_type=nil,read_only=false,write_only=false,schema_key=nil)-macro","name":"generate_schema","doc":null,"summary":null,"abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"types","doc":null,"default_value":"","external_name":"types","restriction":""},{"name":"as_type","doc":null,"default_value":"nil","external_name":"as_type","restriction":""},{"name":"read_only","doc":null,"default_value":"false","external_name":"read_only","restriction":""},{"name":"write_only","doc":null,"default_value":"false","external_name":"write_only","restriction":""},{"name":"schema_key","doc":null,"default_value":"nil","external_name":"schema_key","restriction":""}],"args_string":"(schema, types, as_type = <span class=\"n\">nil</span>, read_only = <span class=\"n\">false</span>, write_only = <span class=\"n\">false</span>, schema_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/serializable.cr#L78","def":{"name":"generate_schema","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"types","doc":null,"default_value":"","external_name":"types","restriction":""},{"name":"as_type","doc":null,"default_value":"nil","external_name":"as_type","restriction":""},{"name":"read_only","doc":null,"default_value":"false","external_name":"read_only","restriction":""},{"name":"write_only","doc":null,"default_value":"false","external_name":"write_only","restriction":""},{"name":"schema_key","doc":null,"default_value":"nil","external_name":"schema_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% serialized_types = [] of ::Tuple(String, TypeNode | ArrayLiteral(TypeNode) | ::Nil) %}\n\n    \n{% nilable = types.any? do |t|\n  t.resolve.nilable?\nend %}\n\n\n    \n# For every type of the instance variable (can be a union, like String | Int32)‚Ä¶\n\n    \n{% for type in (as_type || types) %}\n      {% type = type.resolve %}\n      # Serialize the type into an OpenAPI representation.\n      # Also store extra data for objects and arrays.\n      {% if type <= Union(String, Char) %}\n        {% serialized_types << {\"string\"} %}\n      {% else %}{% if type <= Union(Int8, Int16, Int32, Int64, UInt8, UInt16, UInt32, UInt64) %}\n        {% serialized_types << {\"integer\"} %}\n      {% else %}{% if type <= Union(Float32, Float64) %}\n        {% serialized_types << {\"number\"} %}\n      {% else %}{% if type == Bool %}\n        {% serialized_types << {\"boolean\"} %}\n      {% else %}{% if OpenAPI::Generator::Serializable::SERIALIZABLE_CLASSES.includes?(type) %}\n        {% serialized_types << {\"object\", type} %}\n      {% else %}{% if type.class.has_method?(:to_openapi_schema) %}\n        {% serialized_types << {\"self_schema\", type} %}\n      {% else %}{% if type <= JSON::Any %}\n        {% serialized_types << {\"free_form\"} %}\n      {% else %}\n        {%  %}\n      {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n    {% end %}\n\n\n    \n{% if (schema_key && serialized_types.size > 0) && (!nilable) %}\n      {{ schema }}.required.not_nil! << {{ schema_key.stringify }}\n    {% end %}\n\n\n    \n{% if serialized_types.size == 1 %}\n      # As there is only one supported type‚Ä¶\n      %items = nil\n      %generated_schema = nil\n      %additional_properties = nil\n\n      {% serialized_type = serialized_types[0] %}\n      {% type = serialized_type[0] %}\n      {% extra = serialized_type[1] %}\n\n      {% if type == \"object\" %}\n        %type = nil\n        # Store a reference to another object.\n        {% if read_only || write_only %}\n        %generated_schema = OpenAPI::Schema.new(\n          read_only: {{ read_only }},\n          write_only: {{ write_only }},\n          all_of: [\n            OpenAPI::Reference.new ref: \"#/components/schemas/#{URI.encode_www_form({{ extra.stringify }})}\"\n          ]\n        )\n        {% else %}\n        %generated_schema = OpenAPI::Reference.new ref: \"#/components/schemas/#{URI.encode_www_form({{ extra.stringify }})}\"\n        {% end %}\n      {% else %}{% if type == \"self_schema\" %}\n        %type = nil\n        %generated_schema = {{ extra }}.to_openapi_schema\n        {% if read_only %}\n        %generated_schema.read_only = true\n        {% end %}\n        {% if write_only %}\n        %generated_schema.write_only = true\n        {% end %}\n      {% else %}{% if type == \"free_form\" %}\n        # Free form object\n        %type = \"object\"\n        %additional_properties = true\n      {% else %}\n        # This is a basic type.\n        %type = {{ type }}\n      {% end %}{% end %}{% end %}\n\n      if %type\n        {% if schema_key %}{{ schema }}.properties.not_nil![\"{{ schema_key }}\"]{% else %}{{ schema }}{% end %} = OpenAPI::Schema.new(\n          type: %type,\n          items: %items,\n          additional_properties: %additional_properties,\n          {% if read_only %}read_only:  {{ read_only }},  {% end %}\n          {% if write_only %}write_only: {{ write_only }}, {% end %}\n        )\n      elsif %generated_schema\n        {% if schema_key %}{{ schema }}.properties.not_nil![\"{{ schema_key }}\"]{% else %}{{ schema }}{% end %} = %generated_schema\n      end\n\n    {% else %}{% if serialized_types.size > 1 %}\n      # There are multiple supported types, so we create a \"oneOf\" array‚Ä¶\n      %one_of = [] of OpenAPI::Schema | OpenAPI::Reference\n\n      # And for each type‚Ä¶\n      {% for serialized_type in serialized_types %}\n        {% type = serialized_type[0] %}\n        {% extra = serialized_type[1] %}\n\n        %items = nil\n        %additional_properties = nil\n        %generated_schema = nil\n\n        {% if type == \"object\" %}\n          %type = nil\n          {% if read_only || write_only %}\n          %generated_schema = OpenAPI::Schema.new(\n            read_only: {{ read_only }},\n            write_only: {{ write_only }},\n            all_of: [\n              OpenAPI::Reference.new ref: \"#/components/schemas/#{URI.encode_www_form({{ extra.stringify }})}\"\n            ]\n          )\n          {% else %}\n          %generated_schema = OpenAPI::Reference.new ref: \"#/components/schemas/#{URI.encode_www_form({{ extra.stringify }})}\"\n          {% end %}\n        {% else %}{% if type == \"self_schema\" %}\n          %type = nil\n          %generated_schema = {{ extra }}.to_openapi_schema\n          {% if read_only %}\n          %generated_schema.read_only = true\n          {% end %}\n          {% if write_only %}\n          %generated_schema.write_only = true\n          {% end %}\n        {% else %}{% if type == \"free_form\" %}\n          # Free form object\n          %type = \"object\"\n          %additional_properties = true\n        {% else %}\n          # This is a basic type.\n          %type = {{ type }}\n        {% end %}{% end %}{% end %}\n\n        # We append the reference, or schema to the \"oneOf\" array.\n        if %type\n          %one_of << OpenAPI::Schema.new(\n            type: %type,\n            items: %items,\n            additional_properties: %additional_properties,\n            {% if read_only %} read_only: {{ read_only }}, {% end %}\n            {% if write_only %}write_only: {{ write_only }}, {% end %}\n          )\n        elsif %generated_schema\n          %one_of << %generated_schema\n        end\n      {% end %}\n\n      {% if schema_key %}{{ schema }}.properties.not_nil![\"{{ schema_key }}\"]{% else %}{{ schema }}{% end %} = OpenAPI::Schema.new(one_of: %one_of)\n    {% end %}{% end %}\n\n  \n"}}],"types":[]}]}]},{"html_id":"github.com/elbywan/openapi-generator/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/Amber/Extensions/String","kind":"module","full_name":"Amber::Extensions::String","name":"String"},{"html_id":"github.com/elbywan/openapi-generator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/extensions.cr","line_number":74,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/src/openapi-generator/extensions.cr"},{"filename":"lib/amber/src/amber/extensions/core.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/ff7d7899d80eb8106da68f8870da861777ed14ed/lib/amber/src/amber/extensions/core.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/elbywan/openapi-generator/Amber/Extensions/String","kind":"module","full_name":"Amber::Extensions::String","name":"String"},{"html_id":"github.com/elbywan/openapi-generator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"We are patching the String class and Number struct to extend the predicates\navailable. This will allow to add friendlier methods for validation cases.","summary":"<p>We are patching the String class and Number struct to extend the predicates available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}})