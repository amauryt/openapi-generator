{"repository_name":"github.com/elbywan/openapi-generator","body":"# openapi-generator\n\n[![Build Status](https://travis-ci.org/elbywan/openapi-generator.svg?branch=master)](https://travis-ci.org/elbywan/openapi-generator)\n\n#### Generate an [OpenAPI v3 compliant](https://swagger.io/specification/) yaml file declaratively from your web framework code.\n\nThen serve it from a [Swagger UI](https://swagger.io/tools/swagger-ui/) instance.\n\n## üíæ Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  openapi-generator:\n    github: elbywan/openapi-generator\n```\n\n2. Run `shards install`\n\n## üìö Full Documentation\n\n[**Please check this link for the full documentation.**](https://elbywan.github.io/openapi-generator/OpenAPI/Generator.html)\n\n## üî®Minimal Working Example\n\n```crystal\nrequire \"openapi-generator\"\n\n# The following example is using [Amber](https://amberframework.org/)\n# but this library is compatible with any web framework.\n\nrequire \"amber\"\nrequire \"openapi-generator/providers/amber\"\n\n# Optional: auto-serialize classes into openapi schema.\n# Benefit: a typed Model class can then be used as the source of truth.\nclass Coordinates\n  extend OpenAPI::Generator::Serializable\n\n  def initialize(@lat, @long); end\n\n  property lat  : Int32\n  property long : Int32\nend\n\n# Annotate the methods that will appear in the openapi file.\nclass Controller < Amber::Controller::Base\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      required: true\n      content:\n        #{Schema.ref Coordinates}\n    required: true\n    responses:\n      200:\n        description: OK\n      #{Schema.error 404}\n  YAML\n  )]\n  def method\n    # Some code‚Ä¶\n  end\nend\n\n# Add the routes.\nAmber::Server.configure do\n  routes :api do\n    post \"/method/:id\", Controller, :method\n  end\nend\n\n# Generate the openapi file.\n\nOpenAPI::Generator.generate(\n  provider: OpenAPI::Generator::RoutesProvider::Amber.new\n)\n```\n\nWill produce an `./openapi.yaml` file with the following contents:\n\n```yaml\n---\nopenapi: 3.0.1\ninfo:\n  title: Server\n  version: \"1\"\npaths:\n  /method/{id}:\n    post:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\n    options:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\ncomponents:\n  schemas:\n    Coordinates:\n      required:\n      - lat\n      - long\n      type: object\n      properties:\n        lat:\n          type: integer\n        long:\n          type: integer\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes: {}\n  links: {}\n  callbacks: {}\n```\n\n## ü§ù Contributing\n\n1. Fork it (<https://github.com/your-github-user/openapi-generator/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## üßë‚Äçü§ù‚Äçüßë Contributors\n\n- [elbywan](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"github.com/elbywan/openapi-generator/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/elbywan/openapi-generator","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/elbywan/openapi-generator/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/elbywan/openapi-generator/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/elbywan/openapi-generator/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/extensions.cr","line_number":2,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/extensions.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/elbywan/openapi-generator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/elbywan/openapi-generator/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Define a `self.to_openapi_schema` method for the Array class.","summary":"<p>Define a <code>self<a href=\"Array.html#to_openapi_schema-class-method\">.to_openapi_schema</a></code> method for the Array class.</p>","class_methods":[{"id":"to_openapi_schema-class-method","html_id":"to_openapi_schema-class-method","name":"to_openapi_schema","doc":"Converts an Array to an OpenAPI schema.","summary":"<p>Converts an Array to an OpenAPI schema.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/extensions.cr#L4","def":{"name":"to_openapi_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n\n      {% array_types = T.union_types %}\n      {% serialized_types = [] of ::Tuple(String, TypeNode | ArrayLiteral(TypeNode) | ::Nil) %}\n\n      # For every type parameter of the Array‚Ä¶\n      {% for type in array_types %}\n        # Serialize the type into an OpenAPI representation.\n        # Also store extra data for objects and arrays.\n        {% if type <= Union(String, Char) %}\n          {% serialized_types << {\"string\", Nil} %}\n        {% else %}{% if type <= Union(Int8, Int16, Int32, Int64, UInt8, UInt16, UInt32, UInt64) %}\n          {% serialized_types << {\"integer\", Nil} %}\n        {% else %}{% if type <= Union(Float32, Float64) %}\n          {% serialized_types << {\"number\", Nil} %}\n        {% else %}{% if type == Bool %}\n          {% serialized_types << {\"boolean\", Nil} %}\n        {% else %}{% if type <= Array %}\n          {% serialized_types << {\"array\", type.type_vars[0]} %}\n        {% else %}{% if OpenAPI::Generator::Serializable::SERIALIZABLE_CLASSES.includes?(type) %}\n          {% serialized_types << {\"object\", type} %}\n        {% else %}{% if (type.has_method?(:to_openapi_schema)) || (type.class.has_method?(:to_openapi_schema)) %}\n          {% serialized_types << {\"self_schema\", type} %}\n        {% else %}{% if type <= JSON::Any %}\n          {% serialized_types << {\"json\", Nil} %}\n        {% else %}\n          {%  %}\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n      {% end %}\n\n      {% if serialized_types.size == 1 %}\n        # As there is only one supported type‚Ä¶\n        items = nil\n        ref = nil\n        generated_schema = nil\n        additional_properties = nil\n\n        {% serialized_type = serialized_types[0] %}\n        {% type = serialized_type[0] %}\n        {% extra = serialized_type[1] %}\n\n        {% if type == \"object\" %}\n          # Store a reference to another object.\n          type = nil\n          ref = OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n        {% else %}{% if type == \"self_schema\" %}\n          type = nil\n          generated_schema = {{ extra }}.to_openapi_schema\n        {% else %}{% if type == \"array\" %}\n          type = \"array\"\n          # Recursively compute array items.\n          items = Array({{ extra }}).to_openapi_schema\n        {% else %}{% if type == \"json\" %}\n          # Free form object\n          type = \"object\"\n          additional_properties = true\n        {% else %}\n          # This is a basic type.\n          type = {{ type }}\n        {% end %}{% end %}{% end %}{% end %}\n\n        if type\n          OpenAPI::Schema.new(\n            type: type,\n            items: items,\n            additional_properties: additional_properties\n          )\n        elsif generated_schema\n          generated_schema\n        elsif ref\n          ref\n        end\n\n      {% else %}{% if serialized_types.size > 1 %}\n        # There are multiple supported types, so we create a \"oneOf\" array‚Ä¶\n        one_of = [] of OpenAPI::Schema | OpenAPI::Reference\n\n        {% for serialized_type in serialized_types %}\n          {% type = serialized_type[0] %}\n          {% extra = serialized_type[1] %}\n\n          items = nil\n          ref = nil\n          generated_schema = nil\n          additional_properties = nil\n\n          {% if type == \"object\" %}\n            # Store a reference to another object.\n            type = nil\n            ref = OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n          {% else %}{% if type == \"self_schema\" %}\n            type = nil\n            generated_schema = {{ extra }}.to_openapi_schema\n          {% else %}{% if type == \"array\" %}\n            type = \"array\"\n            # Recursively compute array items.\n            items = Array({{ extra }}).to_openapi_schema\n          {% else %}{% if type == \"json\" %}\n            # Free form object\n            type = \"object\"\n            additional_properties = true\n          {% else %}\n            # This is a basic type.\n            type = {{ type }}\n          {% end %}{% end %}{% end %}{% end %}\n\n          # We append the reference, or schema to the \"oneOf\" array.\n          if type\n            one_of << OpenAPI::Schema.new(\n              type: type,\n              items: items,\n              additional_properties: additional_properties\n            )\n          elsif generated_schema\n           one_of << generated_schema\n          elsif ref\n            one_of << ref\n          end\n        {% end %}\n\n        OpenAPI::Schema.new(one_of: one_of)\n      {% end %}{% end %}\n\n    {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/Hash","path":"Hash.html","kind":"class","full_name":"Hash(K, V)","name":"Hash","abstract":false,"superclass":{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/elbywan/openapi-generator/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/extensions.cr","line_number":134,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/extensions.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/elbywan/openapi-generator/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/elbywan/openapi-generator/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Define a `self.to_openapi_schema` method for the Hash class.","summary":"<p>Define a <code>self<a href=\"Hash.html#to_openapi_schema-class-method\">.to_openapi_schema</a></code> method for the Hash class.</p>","class_methods":[{"id":"to_openapi_schema-class-method","html_id":"to_openapi_schema-class-method","name":"to_openapi_schema","doc":"Returns the OpenAPI schema associated with the Hash.","summary":"<p>Returns the OpenAPI schema associated with the Hash.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/extensions.cr#L136","def":{"name":"to_openapi_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"additional_properties = uninitialized OpenAPI::Schema | OpenAPI::Reference | ::Nil\n{% if true %}\n      {% value_types = V.union_types %}\n      {% serialized_types = [] of ::Tuple(String, TypeNode | ArrayLiteral(TypeNode) | ::Nil) %}\n\n      # For every value type of the Hash‚Ä¶\n      {% for type in value_types %}\n        # Serialize the type into an OpenAPI representation.\n        # Also store extra data for objects and arrays.\n        {% if type <= Union(String, Char) %}\n          {% serialized_types << {\"string\", Nil} %}\n        {% else %}{% if type <= Union(Int8, Int16, Int32, Int64, UInt8, UInt16, UInt32, UInt64) %}\n          {% serialized_types << {\"integer\", Nil} %}\n        {% else %}{% if type <= Union(Float32, Float64) %}\n          {% serialized_types << {\"number\", Nil} %}\n        {% else %}{% if type == Bool %}\n          {% serialized_types << {\"boolean\", Nil} %}\n        {% else %}{% if type <= Array %}\n          {% serialized_types << {\"array\", type.type_vars[0]} %}\n        {% else %}{% if OpenAPI::Generator::Serializable::SERIALIZABLE_CLASSES.includes?(type) %}\n          {% serialized_types << {\"object\", type} %}\n        {% else %}{% if (type.has_method?(:to_openapi_schema)) || (type.class.has_method?(:to_openapi_schema)) %}\n          {% serialized_types << {\"self_schema\", type} %}\n        {% else %}{% if type <= JSON::Any %}\n          {% serialized_types << {\"json\", Nil} %}\n        {% else %}\n          {%  %}\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n      {% end %}\n\n      {% if serialized_types.size == 1 %}\n        # As there is only one supported type‚Ä¶\n        items = nil\n        ref = nil\n        generated_schema = nil\n        additional_properties = nil\n\n        {% serialized_type = serialized_types[0] %}\n        {% type = serialized_type[0] %}\n        {% extra = serialized_type[1] %}\n\n        {% if type == \"object\" %}\n          # Store a reference to another object.\n          type = nil\n          ref = OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n        {% else %}{% if type == \"self_schema\" %}\n          type = nil\n          generated_schema = {{ extra }}.to_openapi_schema\n        {% else %}{% if type == \"array\" %}\n          type = \"array\"\n          # Recursively compute array items.\n          items = Array({{ extra }}).to_openapi_schema\n        {% else %}{% if type == \"json\" %}\n          # Free form object\n          type = \"object\"\n          additional_properties = true\n        {% else %}\n          # This is a basic type.\n          type = {{ type }}\n        {% end %}{% end %}{% end %}{% end %}\n\n        if type\n          additional_properties = OpenAPI::Schema.new(\n            type: type,\n            items: items,\n            additional_properties: additional_properties\n          )\n        elsif generated_schema\n          additional_properties << generated_schema\n        elsif ref\n          additional_properties = ref\n        end\n\n      {% else %}{% if serialized_types.size > 1 %}\n        # There are multiple supported types, so we create a \"oneOf\" array‚Ä¶\n        one_of = [] of OpenAPI::Schema | OpenAPI::Reference\n\n        {% for serialized_type in serialized_types %}\n          {% type = serialized_type[0] %}\n          {% extra = serialized_type[1] %}\n\n          items = nil\n          ref = nil\n          generated_schema = nil\n          additional_properties = nil\n\n          {% if type == \"object\" %}\n            # Store a reference to another object.\n            type = nil\n            ref = OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n          {% else %}{% if type == \"self_schema\" %}\n            type = nil\n            generated_schema = {{ extra }}.to_openapi_schema\n          {% else %}{% if type == \"array\" %}\n            type = \"array\"\n            # Recursively compute array items.\n            items = Array({{ extra }}).to_openapi_schema\n          {% else %}{% if type == \"json\" %}\n            # Free form object\n            type = \"object\"\n            additional_properties = true\n          {% else %}\n            # This is a basic type.\n            type = {{ type }}\n          {% end %}{% end %}{% end %}{% end %}\n\n          # We append the reference, or schema to the \"oneOf\" array.\n          if type\n            one_of << OpenAPI::Schema.new(\n              type: type,\n              items: items,\n              additional_properties: additional_properties\n            )\n          elsif generated_schema\n            one_of << generated_schema\n          elsif ref\n            one_of << ref\n          end\n        {% end %}\n\n        additional_properties = OpenAPI::Schema.new(one_of: one_of)\n      {% end %}{% end %}\n    {% end %}\nOpenAPI::Schema.new(type: \"object\", additional_properties: additional_properties)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI","path":"OpenAPI.html","kind":"module","full_name":"OpenAPI","name":"OpenAPI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":38,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr"},{"filename":"openapi-generator/extensions.cr","line_number":271,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/extensions.cr"},{"filename":"lib/open_api/src/open_api/object.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/object.cr"},{"filename":"lib/open_api/src/open_api/reference.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/reference.cr"},{"filename":"lib/open_api/src/open_api/schema.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/schema.cr"},{"filename":"lib/open_api/src/open_api/example.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/example.cr"},{"filename":"lib/open_api/src/open_api/header.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/header.cr"},{"filename":"lib/open_api/src/open_api/encoding.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/encoding.cr"},{"filename":"lib/open_api/src/open_api/media_type.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/media_type.cr"},{"filename":"lib/open_api/src/open_api/response.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/response.cr"},{"filename":"lib/open_api/src/open_api/parameter.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/parameter.cr"},{"filename":"lib/open_api/src/open_api/request_body.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/request_body.cr"},{"filename":"lib/open_api/src/open_api/server_variable.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/server_variable.cr"},{"filename":"lib/open_api/src/open_api/server.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/server.cr"},{"filename":"lib/open_api/src/open_api/link.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/link.cr"},{"filename":"lib/open_api/src/open_api/external_documentation.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/external_documentation.cr"},{"filename":"lib/open_api/src/open_api/operation.cr","line_number":10,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/operation.cr"},{"filename":"lib/open_api/src/open_api/path_item.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/path_item.cr"},{"filename":"lib/open_api/src/open_api/oauth_flow.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/oauth_flow.cr"},{"filename":"lib/open_api/src/open_api/oauth_flows.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/oauth_flows.cr"},{"filename":"lib/open_api/src/open_api/security_scheme.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/security_scheme.cr"},{"filename":"lib/open_api/src/open_api/components.cr","line_number":16,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/components.cr"},{"filename":"lib/open_api/src/open_api/contact.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/contact.cr"},{"filename":"lib/open_api/src/open_api/license.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/license.cr"},{"filename":"lib/open_api/src/open_api/info.cr","line_number":5,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/info.cr"},{"filename":"lib/open_api/src/open_api/tag.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/tag.cr"},{"filename":"lib/open_api/src/open_api/document.cr","line_number":8,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/document.cr"},{"filename":"lib/open_api/src/open_api/mass_assignment.cr","line_number":1,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/mass_assignment.cr"},{"filename":"lib/open_api/src/open_api/schemas.cr","line_number":4,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api/schemas.cr"},{"filename":"lib/open_api/src/open_api.cr","line_number":3,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/lib/open_api/src/open_api.cr"},{"filename":"openapi-generator/openapi.cr","line_number":7,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/openapi.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","path":"OpenAPI/Generator.html","kind":"module","full_name":"OpenAPI::Generator","name":"Generator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":38,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr"},{"filename":"openapi-generator/generator.cr","line_number":144,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/generator.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_OPTIONS","name":"DEFAULT_OPTIONS","value":"{output: Path[Dir.current] / \"openapi.yaml\"}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI","kind":"module","full_name":"OpenAPI","name":"OpenAPI"},"doc":"An OpenAPI yaml specifications file generator.\n\n### Complete example\n\n```\nrequire \"./src/openapi-generator\"\n\n# The following example is using [Amber](https://amberframework.org/)\n# but this library is compatible with any web framework.\n\nrequire \"amber\"\nrequire \"./src/openapi-generator/providers/amber\"\n\n# Optional: auto-serialize classes into openapi schema.\n# A typed Model class can be used as the source of truth.\nclass Coordinates\n  extend OpenAPI::Generator::Serializable\n\n  def initialize(@lat, @long); end\n\n  property lat : Int32\n  property long : Int32\nend\n\n# Annotate the methods that will appear in the openapi file.\nclass Controller < Amber::Controller::Base\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      required: true\n      content:\n        #{Schema.ref Coordinates}\n    required: true\n    responses:\n      200:\n        description: OK\n      #{Schema.error 404}\n  YAML\n  )]\n  def method\n    # Some code‚Ä¶\n  end\nend\n\n# Add the routes.\nAmber::Server.configure do\n  routes :api do\n    post \"/method/:id\", Controller, :method\n  end\nend\n\n# Generate the openapi file.\n\nOpenAPI::Generator.generate(\n  provider: OpenAPI::Generator::RoutesProvider::Amber.new\n)\n```\n\nWill produce an `./openapi.yaml` file with the following contents:\n\n```yaml\n---\nopenapi: 3.0.1\ninfo:\n  title: Server\n  version: \"1\"\npaths:\n  /method/{id}:\n    post:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\n    options:\n      tags:\n      - tag\n      summary: A brief summary of the method.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        example: id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Not Found.\ncomponents:\n  schemas:\n    Coordinates:\n      required:\n      - lat\n      - long\n      type: object\n      properties:\n        lat:\n          type: integer\n        long:\n          type: integer\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes: {}\n  links: {}\n  callbacks: {}\n```\n\n### Usage\n\n","summary":"<p>An OpenAPI yaml specifications file generator.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"generate(provider:OpenAPI::Generator::RoutesProvider::Base,*,options=NamedTuple.new,base_doc={info:{title:&quot;Server&quot;,version:&quot;1&quot;},components:NamedTuple.new})-instance-method","html_id":"generate(provider:OpenAPI::Generator::RoutesProvider::Base,*,options=NamedTuple.new,base_doc={info:{title:&amp;quot;Server&amp;quot;,version:&amp;quot;1&amp;quot;},components:NamedTuple.new})-instance-method","name":"generate","doc":"Generate an OpenAPI yaml file.\n\nAn `OpenAPI::Generator::RoutesProvider::Base` implementation must be provided.\n\nCurrently, only the [Amber](https://amberframework.org/) provider is included out of the box\nbut writing a custom provider should be easy.\n\n### Example\n\n```\nclass MockProvider < OpenAPI::Generator::RoutesProvider::Base\n  def route_mappings : Array(OpenAPI::Generator::RouteMapping)\n    [\n      {\"get\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n      {\"head\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n      {\"options\", \"/{id}\", \"HelloController::index\", [\"id\"]},\n    ]\n  end\nend\n\noptions = {\n  output: Path[Dir.current] / \"public\" / \"openapi.yaml\",\n}\nbase_doc = {\n  info: {\n    title:   \"Test\",\n    version: \"0.0.1\",\n  },\n  components: NamedTuple.new,\n}\nOpenAPI::Generator.generate(\n  MockProvider.new,\n  options: options,\n  base_doc: base_doc\n)\n```","summary":"<p>Generate an OpenAPI yaml file.</p>","abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"OpenAPI::Generator::RoutesProvider::Base"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"options","doc":null,"default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"base_doc","doc":null,"default_value":"{info: {title: \"Server\", version: \"1\"}, components: NamedTuple.new}","external_name":"base_doc","restriction":""}],"args_string":"(provider : OpenAPI::Generator::RoutesProvider::Base, *, options = <span class=\"t\">NamedTuple</span>.<span class=\"k\">new</span>, base_doc = {info: {title: <span class=\"s\">&quot;Server&quot;</span>, version: <span class=\"s\">&quot;1&quot;</span>}, components: <span class=\"t\">NamedTuple</span>.<span class=\"k\">new</span>})","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/generator.cr#L194","def":{"name":"generate","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"OpenAPI::Generator::RoutesProvider::Base"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"options","doc":null,"default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"base_doc","doc":null,"default_value":"{info: {title: \"Server\", version: \"1\"}, components: NamedTuple.new}","external_name":"base_doc","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes = provider.route_mappings\npath_items = {} of String => OpenAPI::PathItem\noptions = DEFAULT_OPTIONS.merge(options)\nroutes = routes.sort do |a, b|\n  a[1] <=> b[1]\nend\nroutes.each do |route|\n  method, full_path, key, path_params = route\n  if yaml_op = Controller::CONTROLLER_OPS[key]?\n    begin\n      yaml_op_any = YAML.parse(yaml_op)\n      __temp_24 = full_path\n      path_items[__temp_24]? || (path_items[__temp_24] = OpenAPI::PathItem.new)\n      op = OpenAPI::Operation.from_json(yaml_op_any.to_json)\n      if path_params.size > 0\n        op.parameters || (op.parameters = [] of OpenAPI::Parameter | OpenAPI::Reference)\n      end\n      path_params.each do |param|\n        op.parameters.not_nil!.unshift(OpenAPI::Parameter.new(in: \"path\", name: param, required: true, example: param, schema: OpenAPI::Schema.new(type: \"string\")))\n      end\n      {% if true %}\n          {% methods = [\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"] of ::String %}\n\n          case method\n          {% for method in methods %}\n          when \"{{ method.id }}\"\n            path_items[full_path].{{ method.id }} = op\n          {% end %}\n          else\n            raise \"Unsupported method: #{method}.\"\n          end\n\n          {% end %}\n    rescue err\n      Amber.logger.error(\"Error while generating bindings for path [#{full_path}].\\n\\n#{err}\\n\\n#{yaml_op}\", \"OpenAPI Generation\")\n    end\n  else\n    Amber.logger.warn(\"#{full_path} (#{method.upcase}) : Route is undocumented.\", \"OpenAPI Generation\")\n  end\nend\nbase_doc = base_doc.merge({openapi: \"3.0.1\", info: base_doc[\"info\"], paths: path_items, components: base_doc[\"components\"].merge({schemas: Serializable.schemas})})\ndoc = OpenAPI.build do |api|\n  api.document(**base_doc)\nend\nFile.write(options[\"output\"].to_s, doc.to_yaml)\n"}}],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","path":"OpenAPI/Generator/Controller.html","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":38,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONTROLLER_OPS","name":"CONTROLLER_OPS","value":"{} of String => String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"This module, when included, will register every instance methods annotated with the `OpenAPI` annotation.\n\n### Example\n\n```\nclass Controller\n  include OpenAPI::Generator::Controller\n\n  @[OpenAPI(<<-YAML\n    tags:\n    - tag\n    summary: A brief summary of the method.\n    requestBody:\n      content:\n        #{Schema.ref SerializableClass}\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/SerializableClass'\n      required: true\n    responses:\n      \"303\":\n        description: Operation completed successfully, and redirects to /.\n      \"404\":\n        description: Data not found.\n      #{Schema.error 400}\n  YAML\n  )]\n  def method; end\nend\n```\n\n### Usage\n\nIncluding this module will register and mark every instance method annotated with a valid `@[OpenAPI]` annotation during the compilation phase.\nThese methods will then be taken into account when calling the `Generator` as long as the method can be mapped to a route.\n\nThe `Schema` module contains various helpers to generate YAML parts.","summary":"<p>This module, when included, will register every instance methods annotated with the <code><a href=\"../../OpenAPI/Generator/Controller/OpenAPI.html\">OpenAPI</a></code> annotation.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/OpenAPI","path":"OpenAPI/Generator/Controller/OpenAPI.html","kind":"annotation","full_name":"OpenAPI::Generator::Controller::OpenAPI","name":"OpenAPI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":58,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller"},"doc":"This annotation is used to register a controller method as an OpenAPI [Operation Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#operationObject).\n\nThe argument must be a valid YAML representation of an OpenAPI operation object.\n\n```\n@[OpenAPI(<<-YAML\n  tags:\n  - tag\n  summary: A brief summary of the method.\n  responses:\n    200:\n      description: Ok.\nYAML\n)]\ndef method\nend\n```","summary":"<p>This annotation is used to register a controller method as an OpenAPI <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#operationObject\" target=\"_blank\">Operation Object</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/Schema","path":"OpenAPI/Generator/Controller/Schema.html","kind":"module","full_name":"OpenAPI::Generator::Controller::Schema","name":"Schema","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/controller.cr","line_number":78,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller/Schema","kind":"module","full_name":"OpenAPI::Generator::Controller::Schema","name":"Schema"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Controller","kind":"module","full_name":"OpenAPI::Generator::Controller","name":"Controller"},"doc":"This module contains various OpenAPI yaml syntax shortcuts.","summary":"<p>This module contains various OpenAPI yaml syntax shortcuts.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error(code,message=nil)-instance-method","html_id":"error(code,message=nil)-instance-method","name":"error","doc":"Generate an error response as a [response object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#responses-object-example).\n\n```\n# message is optional and defaults to a [standard error description](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) based on the code.\nSchema.error 400, message: \"Bad Request\"\n\n# Produces:\n\n<<-YAML\n400:\n  description: Bad Request\nYAML\n```","summary":"<p>Generate an error response as a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#responses-object-example\" target=\"_blank\">response object</a>.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"args_string":"(code, message = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L177","def":{"name":"error","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{code}: {\\ndescription: #{message || (HTTP::Status.new(code)).description}.\\n}\""}},{"id":"header(name,description,type=&quot;string&quot;)-instance-method","html_id":"header(name,description,type=&amp;quot;string&amp;quot;)-instance-method","name":"header","doc":"Generate a [header object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#header-object).\n\n```\nSchema.header \"X-Header\", \"A custom header\", type: \"string\"\n\n# Produces:\n\n<<-YAML\n\"X-Header\":\n  schema:\n    type: string\n  description: A custom header\nYAML\n```","summary":"<p>Generate a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#header-object\" target=\"_blank\">header object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(name, description, type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L249","def":{"name":"header","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{name}: {\\n  schema: {\\n    type: #{type}\\n  },\\n  description: #{description}\\n}\""}},{"id":"header_param(name,description,*,required=false)-instance-method","html_id":"header_param(name,description,*,required=false)-instance-method","name":"header_param","doc":"Generate a header [parameter object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject).\n\n```\nSchema.header_param \"X-Header\", \"A custom header\", required: true\n\n# Produces\n\n<<-YAML\n- in: header\n  name: \"X-Header\"\n  description: A custom header\n  required: true\nYAML\n```","summary":"<p>Generate a header <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject\" target=\"_blank\">parameter object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""}],"args_string":"(name, description, *, required = <span class=\"n\">false</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L224","def":{"name":"header_param","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"- {\\n  in: header,\\n  name: #{name},\\n  description: #{description},\\n  required: #{required}\\n}\""}},{"id":"qp(name,description,*,required=false)-instance-method","html_id":"qp(name,description,*,required=false)-instance-method","name":"qp","doc":"Generate a query parameter as a [parameter object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject).\n\n```\nSchema.qp \"id\", \"Filter by id\", required: true\n\n# Produces:\n\n<<-YAML\n- in: query\n  name: id\n  description: Filter by id\n  required: true\nYAML\n```","summary":"<p>Generate a query parameter as a <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject\" target=\"_blank\">parameter object</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""}],"args_string":"(name, description, *, required = <span class=\"n\">false</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L199","def":{"name":"qp","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"required","doc":null,"default_value":"false","external_name":"required","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"- {\\n  in: query,\\n  name: \\\"#{name}\\\",\\n  description: \\\"#{description}\\\",\\n  required: #{required}\\n}\""}},{"id":"ref(schema,*,content_type=&quot;application/json&quot;)-instance-method","html_id":"ref(schema,*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"ref","doc":"Generates a schema reference as a [media type object](https://swagger.io/docs/specification/media-types/).\n\nUseful when dealing with objects including the `Serializable` module.\n\n```\nSchema.ref SerializableClass, content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    $ref: '#/components/schemas/SerializableClass'\nYAML\n```","summary":"<p>Generates a schema reference as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(schema, *, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L96","def":{"name":"ref","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\nschema: {\\n    $ref: '#/components/schemas/#{schema.name}'\\n  }\\n}\""}},{"id":"ref_array(schema,*,content_type=&quot;application/json&quot;)-instance-method","html_id":"ref_array(schema,*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"ref_array","doc":"Generates an array of schema references as a [media type object](https://swagger.io/docs/specification/media-types/).\n\nUseful when dealing with objects including the `Serializable` module.\n\n```\nSchema.ref_array SerializableClass, content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    type: array,\n    items:\n      $ref: '#/components/schemas/SerializableClass'\nYAML\n```","summary":"<p>Generates an array of schema references as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(schema, *, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L123","def":{"name":"ref_array","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\n  schema: {\\n      type: array,\\n      items: {\\n        $ref: '#/components/schemas/#{schema.name}'\\n      }\\n  }\\n}\""}},{"id":"string_array(*,content_type=&quot;application/json&quot;)-instance-method","html_id":"string_array(*,content_type=&amp;quot;application/json&amp;quot;)-instance-method","name":"string_array","doc":"Generates an array of string as a [media type object](https://swagger.io/docs/specification/media-types/).\n\n```\nSchema.string_array content_type: \"application/x-www-form-urlencoded\"\n\n# Produces:\n\n<<-YAML\napplication/x-www-form-urlencoded:\n  schema:\n    type: array,\n    items:\n      type: string\nYAML\n```","summary":"<p>Generates an array of string as a <a href=\"https://swagger.io/docs/specification/media-types/\" target=\"_blank\">media type object</a>.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"args_string":"(*, content_type = <span class=\"s\">&quot;application/json&quot;</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/controller.cr#L151","def":{"name":"string_array","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"content_type","doc":null,"default_value":"\"application/json\"","external_name":"content_type","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{content_type}: {\\n  schema: {\\n      type: array,\\n      items: {\\n        type: string\\n      }\\n  }\\n}\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RouteMapping","path":"OpenAPI/Generator/RouteMapping.html","kind":"alias","full_name":"OpenAPI::Generator::RouteMapping","name":"RouteMapping","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/generator.cr","line_number":152,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/generator.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":true,"aliased":"Tuple(String, String, String, Array(String))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"A RouteMapping type is a tuple with the following shape: `{method, full_path, key, path_params}`\n- method: The HTTP Verb of the route. (ex: `\"get\"`)\n- full_path: The full path representation of the route with path parameters between curly braces. (ex: `\"/name/{id}\"`)\n- key: The fully qualified name of the method mapped to the route. (ex: `\"Controller::show\"`)\n- path_params: A list of path parameter names. (ex: `[\"id\", \"name\"]`)","summary":"<p>A RouteMapping type is a tuple with the following shape: <code>{method, full_path, key, path_params}</code> - method: The HTTP Verb of the route.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","path":"OpenAPI/Generator/RoutesProvider.html","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/providers/base.cr","line_number":2,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/base.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"Framework dependent implementations that should provide a list of routes mapped to a method that get executed on match.","summary":"<p>Framework dependent implementations that should provide a list of routes mapped to a method that get executed on match.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Amber","path":"OpenAPI/Generator/RoutesProvider/Amber.html","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Amber","name":"Amber","abstract":false,"superclass":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base"},{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/providers/amber.cr","line_number":20,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/amber.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider"},"doc":"Provides the list of routes declared in an Amber Framework instance.","summary":"<p>Provides the list of routes declared in an Amber Framework instance.</p>","class_methods":[],"constructors":[{"id":"new(included_methods:Array(String)?=nil,included_paths:Array(String)?=nil)-class-method","html_id":"new(included_methods:Array(String)?=nil,included_paths:Array(String)?=nil)-class-method","name":"new","doc":"Initialize the provider with a list of allowed HTTP verbs and path prefixes to filter the routes.","summary":"<p>Initialize the provider with a list of allowed HTTP verbs and path prefixes to filter the routes.</p>","abstract":false,"args":[{"name":"included_methods","doc":null,"default_value":"nil","external_name":"included_methods","restriction":"Array(String) | ::Nil"},{"name":"included_paths","doc":null,"default_value":"nil","external_name":"included_paths","restriction":"Array(String) | ::Nil"}],"args_string":"(included_methods : Array(String)? = <span class=\"n\">nil</span>, included_paths : Array(String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/amber.cr#L22","def":{"name":"new","args":[{"name":"included_methods","doc":null,"default_value":"nil","external_name":"included_methods","restriction":"Array(String) | ::Nil"},{"name":"included_paths","doc":null,"default_value":"nil","external_name":"included_paths","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(included_methods, included_paths)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"route_mappings:Array(RouteMapping)-instance-method","html_id":"route_mappings:Array(RouteMapping)-instance-method","name":"route_mappings","doc":"Return a list of routes mapped with the controllers and methods.","summary":"<p>Return a list of routes mapped with the controllers and methods.</p>","abstract":false,"args":[],"args_string":" : Array(RouteMapping)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/amber.cr#L26","def":{"name":"route_mappings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(RouteMapping)","visibility":"Public","body":"routes = [] of RouteMapping\n::Amber::Server.router.routes.each_route(->(full_path : String, route : ::Amber::Route) do\n  method, paths, path_params = ((full_path.gsub(\"//\", \"/\")).split(\"/\")).reduce({\"\", [] of String, [] of String}) do |acc, segment|\n    method, path_array, params = acc\n    if method.empty?\n      {segment, path_array, params}\n    else\n      if segment.starts_with?(':')\n        param = segment[1..]\n        path_array << \"{#{param}}\"\n        params << param\n        acc\n      else\n        path_array << \"#{segment}\"\n        acc\n      end\n    end\n  end\n  string_path = \"/#{paths.join(\"/\")}\"\n  key = \"#{route.controller}::#{route.action}\"\n  if (  (@included_methods.nil? || @included_methods.try(&.includes?(method))) && (@included_paths.nil? || @included_paths.try(&.any? do |p|\n    string_path.starts_with?(p)\n  end)))\n    routes << {method, string_path, key, path_params}\n  end\nend)\nroutes\n"}}],"macros":[],"types":[]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Base","path":"OpenAPI/Generator/RoutesProvider/Base.html","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/elbywan/openapi-generator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/elbywan/openapi-generator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"openapi-generator/providers/base.cr","line_number":6,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/base.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider/Amber","kind":"class","full_name":"OpenAPI::Generator::RoutesProvider::Amber","name":"Amber"}],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/RoutesProvider","kind":"module","full_name":"OpenAPI::Generator::RoutesProvider","name":"RoutesProvider"},"doc":"Base class for route providers.","summary":"<p>Base class for route providers.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"route_mappings:Array(RouteMapping)-instance-method","html_id":"route_mappings:Array(RouteMapping)-instance-method","name":"route_mappings","doc":"Returns a list of `OpenAPI::Generator::RouteMapping`","summary":"<p>Returns a list of <code><a href=\"../../../OpenAPI/Generator/RouteMapping.html\">OpenAPI::Generator::RouteMapping</a></code></p>","abstract":true,"args":[],"args_string":" : Array(RouteMapping)","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/providers/base.cr#L8","def":{"name":"route_mappings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(RouteMapping)","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Serializable","path":"OpenAPI/Generator/Serializable.html","kind":"module","full_name":"OpenAPI::Generator::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/serializable.cr","line_number":55,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/serializable.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SERIALIZABLE_CLASSES","name":"SERIALIZABLE_CLASSES","value":"[] of Class","doc":"A list of all serializable subclasses.","summary":"<p>A list of all serializable subclasses.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator","kind":"module","full_name":"OpenAPI::Generator","name":"Generator"},"doc":"The `Serializable` module automatically generates an OpenAPI Operations representation of the class or struct when extended.\n\n### Example\n\n```\nstruct Model\n  extend OpenAPI::Generator::Serializable\n  include JSON::Serializable\n\n  property string : String\n  property opt_string : String?\n  @[Field(ignore: true)]\n  property ignored : Nil\n  @[Field(type: String)]\n  @cast : Int32\n\n  def cast\n    @cast.to_s\n  end\nend\n\nputs Model.to_openapi_schema.to_pretty_json\n# => {\n#   \"required\": [\n#     \"string\",\n#     \"cast\"\n#   ],\n#   \"type\": \"object\",\n#   \"properties\": {\n#     \"string\": {\n#       \"type\": \"string\"\n#     },\n#     \"opt_string\": {\n#       \"type\": \"string\"\n#     },\n#     \"cast\": {\n#       \"type\": \"string\"\n#     }\n#   }\n# }\n```\n\n### Usage\n\nExtending this module adds a `self.to_openapi_schema` that returns an OpenAPI representation\ninferred from the shape of the class or struct.\n\nThe class name is also registered as a global [component schema](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#components-object)\nand will be available for referencing from any `Controller` annotation from a [reference object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#referenceObject).\n\n**See:** `OpenAPI::Generator::Controller::Schema.ref`\n\nNOTE: **Calling `to_openapi_schema` programatically is unnecessary.\nThe `Generator` will take care of serialization while producing the openapi yaml file.**","summary":"<p>The <code><a href=\"../../OpenAPI/Generator/Serializable.html\">Serializable</a></code> module automatically generates an OpenAPI Operations representation of the class or struct when extended.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_openapi_schema-instance-method","html_id":"to_openapi_schema-instance-method","name":"to_openapi_schema","doc":"Serialize the class into an `OpenAPI::Schema` representation.\n\nCheck the [swagger documentation](https://swagger.io/docs/specification/data-models/) for more details","summary":"<p>Serialize the class into an <code>OpenAPI::Schema</code> representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/serializable.cr#L84","def":{"name":"to_openapi_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"schema = OpenAPI::Schema.new(type: \"object\", properties: Hash(String, OpenAPI::Schema | OpenAPI::Reference).new, required: [] of String)\n{% for ivar in @type.instance_vars %}\n\n      {% json_ann = ivar.annotation(JSON::Field) %}\n      {% openapi_ann = ivar.annotation(OpenAPI::Generator::Serializable::Field) %}\n      {% schema_key = (json_ann && json_ann[:key]) || ivar.id %}\n      {% as_type = (openapi_ann && openapi_ann[:type]) && openapi_ann[:type].types.map(&.resolve) %}\n      {% read_only = openapi_ann && openapi_ann[:read_only] %}\n      {% write_only = openapi_ann && openapi_ann[:write_only] %}\n\n      {% if json_ann && json_ann[:ignore] %}{% else %}\n\n        {% ivar_types = ivar.type.union_types %}\n        {% serialized_types = [] of ::Tuple(String, Bool) %}\n\n        # For every type of the instance variable (can be a union, like String | Int32)‚Ä¶\n        {% for type in (as_type || ivar_types) %}\n          # Serialize the type into an OpenAPI representation.\n          # Also store extra data for objects and arrays.\n          {% if type <= Union(String, Char) %}\n            {% serialized_types << {\"string\"} %}\n          {% else %}{% if type <= Union(Int8, Int16, Int32, Int64, UInt8, UInt16, UInt32, UInt64) %}\n            {% serialized_types << {\"integer\"} %}\n          {% else %}{% if type <= Union(Float32, Float64) %}\n            {% serialized_types << {\"number\"} %}\n          {% else %}{% if type == Bool %}\n            {% serialized_types << {\"boolean\"} %}\n          {% else %}{% if type <= Array %}\n            {% serialized_types << {\"array\", type.type_vars[0]} %}\n          {% else %}{% if OpenAPI::Generator::Serializable::SERIALIZABLE_CLASSES.includes?(type) %}\n            {% serialized_types << {\"object\", type} %}\n          {% else %}{% if (type.has_method?(:to_openapi_schema)) || (type.class.has_method?(:to_openapi_schema)) %}\n            {% serialized_types << {\"self_schema\", type} %}\n          {% else %}{% if type <= JSON::Any %}\n            {% serialized_types << {\"json\"} %}\n          {% else %}\n            {%  %}\n          {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n        {% end %}\n\n        {% if serialized_types.size > 0 && (!ivar.type.nilable?) %}\n          schema.required.not_nil! << {{ schema_key.stringify }}\n        {% end %}\n\n        {% if serialized_types.size == 1 %}\n          # As there is only one supported type‚Ä¶\n          items = nil\n          ref = nil\n          generated_schema = nil\n          additional_properties = nil\n\n          {% serialized_type = serialized_types[0] %}\n          {% type = serialized_type[0] %}\n          {% extra = serialized_type[1] %}\n\n          {% if type == \"object\" %}\n            # Store a reference to another object.\n            type = nil\n            ref = OpenAPI::Schema.new(\n              read_only: {{ read_only }},\n              write_only: {{ write_only }},\n              all_of: [\n                OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n              ]\n            )\n          {% else %}{% if type == \"array\" %}\n            type = \"array\"\n            # Recursively compute array items.\n            items = Array({{ extra }}).to_openapi_schema\n          {% else %}{% if type == \"json\" %}\n            # Free form object\n            type = \"object\"\n            additional_properties = true\n          {% else %}{% if type == \"self_schema\" %}\n            type = nil\n            generated_schema = {{ extra }}.to_openapi_schema\n          {% else %}\n            # This is a basic type.\n            type = {{ type }}\n          {% end %}{% end %}{% end %}{% end %}\n\n          if type\n            schema.properties.not_nil![\"{{ schema_key }}\"] = OpenAPI::Schema.new(\n              type: type,\n              items: items,\n              additional_properties: additional_properties,\n              read_only: {{ read_only }},\n              write_only: {{ write_only }}\n            )\n          elsif generated_schema\n            schema.properties.not_nil![\"{{ schema_key }}\"] = generated_schema\n          elsif ref\n            schema.properties.not_nil![\"{{ schema_key }}\"] = ref\n          end\n\n        {% else %}{% if serialized_types.size > 1 %}\n          # There are multiple supported types, so we create a \"oneOf\" array‚Ä¶\n          one_of = [] of OpenAPI::Schema | OpenAPI::Reference\n\n          # And for each type‚Ä¶\n          {% for serialized_type in serialized_types %}\n            {% type = serialized_type[0] %}\n            {% extra = serialized_type[1] %}\n\n            items = nil\n            ref = nil\n            additional_properties = nil\n            generated_schema = nil\n\n            {% if type == \"object\" %}\n              # Store a reference to another object.\n              type = nil\n              # ref = OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n              ref = OpenAPI::Schema.new(\n                read_only: {{ read_only }},\n                write_only: {{ write_only }},\n                all_of: [\n                  OpenAPI::Reference.new ref: \"#/components/schemas/{{ extra }}\"\n                ]\n              )\n            {% else %}{% if type == \"array\" %}\n              type = \"array\"\n              # Recursively compute array items.\n              items = Array({{ extra }}).to_openapi_schema\n            {% else %}{% if type == \"json\" %}\n              # Free form object\n              type = \"object\"\n              additional_properties = true\n            {% else %}{% if type == \"self_schema\" %}\n              type = nil\n              generated_schema = {{ extra }}.to_openapi_schema\n            {% else %}\n              # This is a basic type.\n              type = {{ type }}\n            {% end %}{% end %}{% end %}{% end %}\n\n            # We append the reference, or schema to the \"oneOf\" array.\n            if type\n              one_of << OpenAPI::Schema.new(\n                type: type,\n                items: items,\n                additional_properties: additional_properties,\n                read_only: {{ read_only }},\n                write_only: {{ write_only }}\n              )\n            elsif generated_schema\n              one_of << generated_schema\n            elsif ref\n              one_of << ref\n            end\n          {% end %}\n\n          schema.properties.not_nil![\"{{ schema_key }}\"] = OpenAPI::Schema.new(one_of: one_of)\n        {% end %}{% end %}\n      {% end %}\n\n    {% end %}\nschema\n"}}],"macros":[],"types":[{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Serializable/Field","path":"OpenAPI/Generator/Serializable/Field.html","kind":"annotation","full_name":"OpenAPI::Generator::Serializable::Field","name":"Field","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"openapi-generator/serializable.cr","line_number":65,"url":"https://github.com/elbywan/openapi-generator/blob/34ba401ec5f0d491b1a32ed3429bc38cce351e76/src/openapi-generator/serializable.cr"}],"repository_name":"github.com/elbywan/openapi-generator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/elbywan/openapi-generator/OpenAPI/Generator/Serializable","kind":"module","full_name":"OpenAPI::Generator::Serializable","name":"Serializable"},"doc":"Mark a field with special properties during serialization.\n\n```\n@[Field(ignore: true)] # Ignore the field\nproperty ignored_field\n\n@[Field(type: String)] # Enforce a type\nproperty str_field : Int32\n```","summary":"<p>Mark a field with special properties during serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}]}}